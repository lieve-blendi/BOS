do local a={"/boot/kernel/pipes","/OS.lua","/init.lua"}local b=component;local c=computer;local d=b.invoke;local function e(f,g,...)local h=table.pack(pcall(d,f,g,...))if not h[1]then return nil,h[2]else return table.unpack(h,2,h.n)end end;local function i(j)local k=b.proxy(j)for l,m in ipairs(a)do if k.exists(m)then return m end end end;local function n(o)local p=b.proxy(o)local q=p.list("/")for r,m in ipairs(q)do p.remove(m)end;p.setLabel(nil)end;local s=b.list("eeprom")()c.getBootAddress=function()return e(s,"getData")end;c.setBootAddress=function(f)return e(s,"setData",f)end;local t=b.list("screen")()local u=b.proxy(b.list("gpu")())if u and t then e(u,"bind",t)end;if not u then error("No graphics card available")end;local v,w=u.getResolution()u.setForeground(0xFFFFFF)u.setBackground(0)u.fill(1,1,v,w," ")u.set(1,1,"Wings BIOS")u.set(1,2,"Press left control to boot BIOS")local function x(o)c.setBootAddress(o)u.fill(1,1,v,w," ")u.set(1,1,"Booting in "..o.."...")local y=i(o)local z,A=e(o,"open",y)if not z then return nil,A end;local B=""repeat local C,A=e(o,"read",z,math.huge)if not C and A then return nil,A end;B=B..(C or"")until not C;e(o,"close",z)return load(B,"="..y)end;do local D,E,E,F=c.pullSignal(3)if D~="key_down"or F~=29 then local G,A=x(c.getBootAddress())if G then G()else for H in b.list("filesystem")do G,A=x(H)if G then return G()end end;if G then G()else error("No bootable device found")end end end end;local I="drives"local J=""while true do u.fill(1,1,v,w," ")local K={}local L={}for H in b.list("filesystem")do local M=b.proxy(H)if c.tmpAddress()~=H then table.insert(K,H)local N=""if c.getBootAddress()==H then N=" < Default boot drive"end;local O=M.getLabel()local P=math.floor(M.spaceUsed()/1048576*100)/100;local Q=math.floor(M.spaceTotal()/1048576*100)/100;if O then table.insert(L,O.." ("..string.sub(H,1,8)..") ("..P.."/"..Q.."MB used)"..N)else table.insert(L,string.sub(H,1,8).." ("..P.."/"..Q.."MB used)"..N)end end end;if I=="drives"then local R="Boot normally"for l,m in ipairs(K)do u.set(1,l,L[l])end;u.set(1,#K+1,R)local D,E,S,T=c.pullSignal()if D=="touch"then if T>=1 and T<=#K then if S>=1 and S<=#L[T]then J=K[T]I="drivesettings"end elseif T==#K+1 then if S>=1 and S<=#R then local G,A=x(c.getBootAddress())if G then G()else for H in b.list("filesystem")do G,A=x(H)if G then return G()end end;if G then G()else error("No bootable device found")end end end end end end;if I=="drivesettings"then local U={"Erase Drive","Boot Drive","Back"}for l,m in ipairs(U)do u.set(1,l,m)end;local D,E,S,T=c.pullSignal()if D=="touch"then for l,m in ipairs(U)do if T==l then if S>=1 and S<=#m then if l==1 then I="erasesure"elseif l==2 then local G,A=x(J)if G then G()else error("Failed to load OS: "..A)end elseif l==3 then I="drives"J=""end end end end end end;if I=="erasesure"then local U={"Are you sure you want to erase this drive?","","Yes","No"}for l,m in ipairs(U)do u.set(1,l,m)end;local D,E,S,T=c.pullSignal()if D=="touch"then for l,m in ipairs(U)do if T==l then if S>=1 and S<=#m then if l==3 then n(J)I="drives"J=""elseif l==4 then I="drives"J=""end end end end end end end end
